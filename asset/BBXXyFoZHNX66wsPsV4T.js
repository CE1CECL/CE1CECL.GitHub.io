var u=Object.defineProperty;var T=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var d=(r,e,t)=>(T(r,typeof e!="symbol"?e+"":e,t),t);import{ae as p,ad as c,az as h,ax as l}from"./D1zPwdc9cyvUD_PRY_dc.js";var x=Object.defineProperty,b=Object.getOwnPropertyDescriptor,a=(r,e,t,n)=>{for(var s=n>1?void 0:n?b(e,t):e,m=r.length-1,o;m>=0;m--)(o=r[m])&&(s=(n?o(e,t,s):o(s))||s);return n&&s&&x(e,t,s),s};const E=[{id:"test",name:"Test",description:"This is a test experiment.",treatments:[{id:0,name:"Control"},{id:1,name:"Treatment 1"},{id:2,name:"Treatment 2"}]},{id:"message_queue",name:"Message Queue Testing",description:"Changes the behavior of messages.",treatments:[{id:0,name:"Control"},{id:1,name:"Treatment 1",description:"Stuck in queue"},{id:2,name:"Treatment 2",description:"Failed"}]}];class i{constructor(){d(this,"experiments");this.experiments=new h,l(this)}isTreatmentEnabled(e,t){return this.experiments.get(e)===t}getTreatment(e){const t=this.experiments.get(e),n=E.find(s=>s.id===e);return n==null?void 0:n.treatments.find(s=>s.id===t)}setTreatment(e,t){this.experiments.set(e,t)}isExperimentEnabled(e){return this.experiments.has(e)&&this.experiments.get(e)!==0}reset(){this.experiments.clear()}}a([p],i.prototype,"isTreatmentEnabled",1);a([p],i.prototype,"getTreatment",1);a([c],i.prototype,"setTreatment",1);a([p],i.prototype,"isExperimentEnabled",1);a([c],i.prototype,"reset",1);export{i as E};
//# sourceMappingURL=BBXXyFoZHNX66wsPsV4T.js.map
